
[supervisord]
http_port=/var/tmp/supervisor.sock ; (default is to run a UNIX domain socket server)
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (logging level;default info; others: debug,warn)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)
childlogdir=/var/log/ckan/  ; where to log the child process logs for harvesting
nocleanup=true              ; do not create a new log file for each run of the harvester

[supervisorctl]
serverurl=unix:///var/tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:ckan_gather_consumer]

command=/usr/lib/ckan/default/bin/paster --plugin=ckanext-harvest harvester gather_consumer --config=/etc/ckan/default/production.ini

; user that owns virtual environment.
user=ckan

numprocs=1
stdout_logfile="ckan_gather_consumer_out"
stderr_logfile="ckan_gather_consumer_error"
autostart=true
autorestart=true
startsecs=10

[program:ckan_fetch_consumer]

command=/usr/lib/ckan/default/bin/paster --plugin=ckanext-harvest harvester fetch_consumer --config=/etc/ckan/default/production.ini

; user that owns virtual environment.
user=ckan

numprocs=1
stdout_logfile="ckan_fetch_consumer_out"
stderr_logfile="ckan_fetch_consumer_error"
autostart=true
autorestart=true
startsecs=10
